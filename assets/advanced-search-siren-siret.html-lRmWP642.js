import{_ as p,c as i,a as e,b as a,d as n,e as l,w as c,r as o,o as r}from"./app-Dqa0694n.js";const u={};function d(k,s){const t=o("RouteLink");return r(),i("div",null,[s[13]||(s[13]=e('<h1 id="recherche-d-unites-legales-ou-d-etablissements" tabindex="-1"><a class="header-anchor" href="#recherche-d-unites-legales-ou-d-etablissements"><span>Recherche d&#39;unités légales ou d&#39;établissements</span></a></h1><p>La recherche multicritères d&#39;unités légales ou d&#39;établissements se fait avec une instance de <code>LuFiipe\\InseeSierene\\Sirene</code>, en utilisant les méthodes suivantes :</p><ul><li><code>searchLegalUnits()</code> : Recherche multicritères d&#39;unités légales.</li><li><code>searchEstablishments()</code> : Recherche multicritères d&#39;établissements.</li></ul><p>Puis en passant une instance de <code>LuFiipe\\InseeSierene\\Parameters\\SearchParameters</code> qui permet de :</p><ul><li>Effectuer des requêtes avec la méthode <code>setQuery()</code>.</li><li>Appliquer les critères de recherche sur les champs historisés avec <code>setDate()</code>.</li><li>Filtrer les attributs d&#39;une unité légale ou d&#39;un établissement retourné par l&#39;api SIRENE avec <code>setFields()</code> et <code>setHideNull()</code>.</li><li>Trier les résulats avec <code>addSort()</code>.</li><li>Limiter les résultats avec <code>setPerPage()</code> ou débuter la pagination depuis un index avec <code>setOffset()</code>.</li><li>Utiliser la pagination profonde avec <code>withCursor()</code>.</li></ul>',5)),a("p",null,[s[1]||(s[1]=n("Les recherches multicritères d'unité légale ou d'établissement retournent une instance de ")),l(t,{to:"/responses.html#collection"},{default:c(()=>s[0]||(s[0]=[n("LuFiipe\\InseeSierene\\Response\\Collection")])),_:1,__:[0]}),s[2]||(s[2]=n(" avec lequel on peut parcourir les résultats par itération avec ")),s[3]||(s[3]=a("code",null,"each()",-1)),s[4]||(s[4]=n(" ou manuellement avec des méthodes comme ")),s[5]||(s[5]=a("code",null,"firstPage()",-1)),s[6]||(s[6]=n(", ")),s[7]||(s[7]=a("code",null,"nextPage()",-1)),s[8]||(s[8]=n(", ")),s[9]||(s[9]=a("code",null,"previousPage()",-1)),s[10]||(s[10]=n(" et ")),s[11]||(s[11]=a("code",null,"lastPage()",-1)),s[12]||(s[12]=n("."))]),s[14]||(s[14]=e(`<h2 id="requete" tabindex="-1"><a class="header-anchor" href="#requete"><span>Requête</span></a></h2><p>Les requêtes multicritères se font avec la méthode <code>setQuery()</code>.</p><h3 id="variable-non-historisee" tabindex="-1"><a class="header-anchor" href="#variable-non-historisee"><span>Variable non-historisée</span></a></h3><p>Exemple de recherche d&#39;établissements avec la commune de Malakoff (code commune=92046) :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;codeCommuneEtablissement:92046&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Exemple de recherche d&#39;unités purgées :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;unitePurgeeUniteLegale:true&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchLegalUnits</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_histo_non_histo_311.html" target="_blank" rel="noopener noreferrer">Recherche sur une variable non-historisée</a></p></div><h3 id="variable-historisee" tabindex="-1"><a class="header-anchor" href="#variable-historisee"><span>Variable historisée</span></a></h3><p>Exemple de recherche d&#39;unités légales dont la dénomination contient ou a contenu le mot GAZ :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(denominationUniteLegale:GAZ)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchLegalUnits</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Exemple de recherche d&#39;établissements dont le code de l&#39;activité principale a été ou est 33.01 :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(activitePrincipaleEtablissement:33.01)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_histo_non_histo_311.html" target="_blank" rel="noopener noreferrer">Recherche sur une variable historiséee</a></p></div><h3 id="elimination" tabindex="-1"><a class="header-anchor" href="#elimination"><span>Elimination</span></a></h3><p>Il est possible de construire une requête en recherchant tous les établissements qui n&#39;ont pas une caractéristique en utilisant le caractère &quot; - &quot;.</p><p>Exemple avec la recherche de tous les établissements dont l&#39;unité légale est considérée comme une personne morale :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;-categorieJuridiqueUniteLegale:1000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_elimination_311.html" target="_blank" rel="noopener noreferrer">Recherche par élimination</a></p></div><h3 id="operateurs-and-or" tabindex="-1"><a class="header-anchor" href="#operateurs-and-or"><span>Opérateurs AND, OR</span></a></h3><p>Exemple de recherche d&#39;établissements ayant comme dénomination &quot;INSEE&quot; :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;%VAR%&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;INSEE&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;(raisonSociale:&quot;%VAR%&quot; OR (prenom1UniteLegale:&quot;%VAR%&quot; AND nomUniteLegale:&quot;%VAR%&quot;) OR (prenom1UniteLegale:&quot;%VAR%&quot; AND nomUniteLegale:&quot;%VAR%&quot;))&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_plusieurs_variables_311.html" target="_blank" rel="noopener noreferrer">Requête sur plusieurs variables</a></p></div><h3 id="utilisation-de-caracteres-speciaux" tabindex="-1"><a class="header-anchor" href="#utilisation-de-caracteres-speciaux"><span>Utilisation de caractères spéciaux</span></a></h3><h4 id="remplace-une-chaine-de-caracteres-de-taille-quelconque" tabindex="-1"><a class="header-anchor" href="#remplace-une-chaine-de-caracteres-de-taille-quelconque"><span>&quot;*&quot; remplace une chaîne de caractères de taille quelconque</span></a></h4><p>Exemple de recherche d&#39;établissements dont l&#39;activité principale commence par 8 :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;activitePrincipaleUniteLegale:8*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remplace-exactement-un-caractere" tabindex="-1"><a class="header-anchor" href="#remplace-exactement-un-caractere"><span>&quot;?&quot; remplace exactement un caractère</span></a></h4><p>Exemple de recherche d&#39;établissements dont l&#39;unité légale a un sigle sur 3 positions :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;sigleUniteLegale:???&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchLegalUnits</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="recherche-approximative" tabindex="-1"><a class="header-anchor" href="#recherche-approximative"><span>&quot;~&quot; recherche approximative</span></a></h4><p>Exemple de recherche d&#39;établissements dont l&#39;unité légale a comme <em>prenom1UniteLegale</em> &quot;MICKAEL&quot; à deux caractères près, mais pas exactement &quot;MICKAEL&quot; :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;prenom1UniteLegale:MICKAEL~ AND -prenom1UniteLegale:MICKAEL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><ul><li><a href="https://www.sirene.fr/static-resources/documentation/multi_car_speciaux_311.html" target="_blank" rel="noopener noreferrer">Utilisation de caractères spéciaux : « * » et « ? »</a></li><li><a href="https://www.sirene.fr/static-resources/documentation/multi_car_speciaux2_311.html" target="_blank" rel="noopener noreferrer">Utilisation du caractère spécial « ~ » : recherche approximative</a></li></ul></div><h3 id="requete-sur-une-plage-de-valeurs" tabindex="-1"><a class="header-anchor" href="#requete-sur-une-plage-de-valeurs"><span>Requête sur une plage de valeurs</span></a></h3><p>Exemple de recherche d&#39;établissements de médecins généralistes dont le nombre de périodes va de 12 à 20 (inclus) :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;categorieJuridiqueUniteLegale:1000 AND activitePrincipaleUniteLegale:86.21Z AND nombrePeriodesEtablissement:[12 TO 20]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_plages_311.html" target="_blank" rel="noopener noreferrer">Requête sur une plage de valeurs</a></p></div><h3 id="requete-sur-les-variables-de-type-date" tabindex="-1"><a class="header-anchor" href="#requete-sur-les-variables-de-type-date"><span>Requête sur les variables de type date</span></a></h3><p>Exemple de recherche de toutes les unités légales qui ont eu un changement de dénomination l&#39;année 2017 :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(changementDenominationUniteLegale:true AND dateDebut:2017)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchLegalUnits</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_variables_dates_311.html" target="_blank" rel="noopener noreferrer">Requête sur les variables de type date</a></p></div><h2 id="requete-sur-les-champs-historises" tabindex="-1"><a class="header-anchor" href="#requete-sur-les-champs-historises"><span>Requête sur les champs historisés</span></a></h2><p><code>setDate()</code> permet d&#39;appliquer les critères de recherche sur les champs historisés.</p><p>Exemple de recherche d&#39;établissements de Malakoff dont l&#39;<em>activitePrincipaleEtablissement</em> est 56.10A (restauration traditionnelle) et actifs au 01/01/2018 :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(etatAdministratifEtablissement:A AND activitePrincipaleEtablissement:56.10A) AND codeCommuneEtablissement:92046&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;2018-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filtres" tabindex="-1"><a class="header-anchor" href="#filtres"><span>Filtres</span></a></h2><p>Avec <code>LuFiipe\\InseeSierene\\Parameters\\SearchParameters</code> il est aussi possible de filtrer les attributs des unités légales ou des établissements retournés par l&#39;api SIRENE.</p><ul><li><code>setFields()</code> : Liste des champs demandés.</li><li><code>setHideNull()</code> : Masque (true) ou affiche (false, par défaut) les attributs qui n&#39;ont pas de valeur.</li></ul><p>Exemple qui affiche uniquement les attributs <em>denominationUniteLegale</em> et <em>economieSocialeSolidaireUniteLegale</em> :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(denominationUniteLegale:INSEE)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;denominationUniteLegale&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;economieSocialeSolidaireUniteLegale&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchLegalUnits</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Exemple qui cache les attributs <code>Null</code> du siret 12002701600563 :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;raisonSociale:INSEE&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setHideNull</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="hhttps://www.sirene.fr/static-resources/documentation/multi_parametre_date_311.html" target="_blank" rel="noopener noreferrer">Requête avec le paramètre date</a></p></div><h2 id="tri" tabindex="-1"><a class="header-anchor" href="#tri"><span>Tri</span></a></h2><p>Permet de trier les élements d&#39;un résultat. Il est possible de trier les données sur un ou plusieurs attributs, par ordre ascendant ou descendant.</p><ul><li><code>SortInterface::SORT_ORDER_ASC</code> : ordre ascendant.</li><li><code>SortInterface::SORT_ORDER_DESC</code> : ordre descendant.</li></ul><p>Exemple de recherche d&#39;unités légales ayant exactement &quot;wilfrid&quot; en premier prénom et dont le deuxième prénom commence par un &quot;e&quot;, triée sur le deuxième prénom (tri ascendant par défaut) puis le siren en descendant :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>SortInterface</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;prenom1UniteLegale:&quot;wilfrid&quot; AND prenom2UniteLegale:e*&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;prenom2UniteLegale&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siren&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">SortInterface</span><span class="token operator">::</span><span class="token constant">SORT_ORDER_DESC</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_pagination_311.html" target="_blank" rel="noopener noreferrer">Pagination des résultats : paramètres debut, nombre, tri</a></p></div><h2 id="paginations" tabindex="-1"><a class="header-anchor" href="#paginations"><span>Paginations</span></a></h2><p>Tous les résultats des recherches multicritères sont renvoyés par page. La pagination peut se faire de manière classique avec une <code>limit</code> et un <code>offset</code>. Ou en utilisant un système de <code>curseur</code>.</p><h3 id="offset-perpage" tabindex="-1"><a class="header-anchor" href="#offset-perpage"><span>Offset, PerPage</span></a></h3><ul><li><code>setPerPage()</code> Permet d&#39;indiquer le nombre d&#39;éléments à retourner par page.</li><li><code>setOffset()</code> Permet d&#39;indiquer le rang de classement du premier élément à retourner sur la page.</li></ul><p>Exemple en limitant la pagination à 4 éléments par page et en débutant la pagination à l&#39;indexe N° 2 :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(denominationUniteLegale:&quot;METEO-FRANCE&quot;)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setPerPage</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setOffset</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="curseur" tabindex="-1"><a class="header-anchor" href="#curseur"><span>Curseur</span></a></h3><p>Si vous désirez parcourir un grand nombre de résultats, notamment pour obtenir des résultats au-delà de la limite indiquée dans le tableau (1000), il est fortement recommandé d&#39;utiliser des curseurs.</p><p>Exemple de recherche de tous les établissements actifs des associations et assimilés (catégorie juridique commençant par 92) du 1er arrondissement de Paris.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;periode(etatAdministratifEtablissement:A) AND categorieJuridiqueUniteLegale:92* AND codeCommuneEtablissement:75101&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setPerPage</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">withCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Pour plus d&#39;info voir : Documentation API Sirene</p><p><a href="https://www.sirene.fr/static-resources/documentation/multi_pagination_curseur_311.html" target="_blank" rel="noopener noreferrer">Pagination des résultats : utilisation du paramètre curseur</a></p></div>`,71))])}const v=p(u,[["render",d]]),h=JSON.parse(`{"path":"/advanced-search-siren-siret.html","title":"Recherche d'unités légales ou d'établissements","lang":"fr","frontmatter":{},"headers":[{"level":2,"title":"Requête","slug":"requete","link":"#requete","children":[{"level":3,"title":"Variable non-historisée","slug":"variable-non-historisee","link":"#variable-non-historisee","children":[]},{"level":3,"title":"Variable historisée","slug":"variable-historisee","link":"#variable-historisee","children":[]},{"level":3,"title":"Elimination","slug":"elimination","link":"#elimination","children":[]},{"level":3,"title":"Opérateurs AND, OR","slug":"operateurs-and-or","link":"#operateurs-and-or","children":[]},{"level":3,"title":"Utilisation de caractères spéciaux","slug":"utilisation-de-caracteres-speciaux","link":"#utilisation-de-caracteres-speciaux","children":[]},{"level":3,"title":"Requête sur une plage de valeurs","slug":"requete-sur-une-plage-de-valeurs","link":"#requete-sur-une-plage-de-valeurs","children":[]},{"level":3,"title":"Requête sur les variables de type date","slug":"requete-sur-les-variables-de-type-date","link":"#requete-sur-les-variables-de-type-date","children":[]}]},{"level":2,"title":"Requête sur les champs historisés","slug":"requete-sur-les-champs-historises","link":"#requete-sur-les-champs-historises","children":[]},{"level":2,"title":"Filtres","slug":"filtres","link":"#filtres","children":[]},{"level":2,"title":"Tri","slug":"tri","link":"#tri","children":[]},{"level":2,"title":"Paginations","slug":"paginations","link":"#paginations","children":[{"level":3,"title":"Offset, PerPage","slug":"offset-perpage","link":"#offset-perpage","children":[]},{"level":3,"title":"Curseur","slug":"curseur","link":"#curseur","children":[]}]}],"git":{"updatedTime":1750409905000,"contributors":[{"name":"Luis-Filipe ANTUNES","username":"","email":"lf.antunes.dasilva@gmail.com","commits":1}],"changelog":[{"hash":"34ae70bb58865cf686cb6461a22bc23d95033548","time":1750409905000,"email":"lf.antunes.dasilva@gmail.com","author":"Luis-Filipe ANTUNES","message":"Initial commit"}]},"filePathRelative":"advanced-search-siren-siret.md"}`);export{v as comp,h as data};
