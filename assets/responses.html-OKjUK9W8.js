import{_ as s,c as a,a as e,o as p}from"./app-Dqa0694n.js";const t={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="les-reponses" tabindex="-1"><a class="header-anchor" href="#les-reponses"><span>Les réponses</span></a></h1><p>Les réponses fournies par les API INSEE Sirene peuvent être de deux types : une réponse unitaire ou une collection.</p><h2 id="reponse-unitaire" tabindex="-1"><a class="header-anchor" href="#reponse-unitaire"><span>Réponse unitaire</span></a></h2><p>Les réponses unitaires (<code>LuFiipe\\InseeSierene\\Response\\Response</code>) sont structurées en 2 parties qui peuvent être consultées avec les méthodes :</p><ul><li><code>getHeader()</code> : Le header (à ne pas confondre avec l&#39;en-tête http ni l&#39;en-tête de réponse) qui contient le code retour et le message d&#39;erreur.</li><li><code>getBody()</code> : Le corps qui contient les informations relatives d&#39;une unité légale ou d&#39;un établissement.</li><li><code>get()</code> : qui est un alias de <code>getBody()</code>.</li></ul><p>Exemple:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$legalUnit</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">siren</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;120027016&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Informations d&#39;une unité légale</span></span>
<span class="line"><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$legalUnit</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="header" tabindex="-1"><a class="header-anchor" href="#header"><span>Header</span></a></h3><p>La partie header, contient le code retour et le message d&#39;erreur.</p><ul><li><code>getStatus()</code> : Code status de l&#39;erreur.</li><li><code>getMessage()</code> : Message de l&#39;erreur.</li></ul><h2 id="collection" tabindex="-1"><a class="header-anchor" href="#collection"><span>Collection</span></a></h2><p>Une collection (<code>LuFiipe\\InseeSierene\\Response\\Collection</code>) permet de parcourir les éléments d&#39;un résultat, soit par itération, soit manuellement à l&#39;aide d&#39;un ensemble de méthodes dédiées.</p><h3 id="par-iteration" tabindex="-1"><a class="header-anchor" href="#par-iteration"><span>Par itération</span></a></h3><p>Les résultats sont parcourus par itération à l&#39;aide de la méthode <code>each()</code>, qui applique une closure à chaque élément.</p><p>La closure prenant quatre arguments, ordonnés de la manière suivante :</p><ul><li><code>array</code> <code>$item</code> : Les données d&#39;une unité légale ou d&#39;un établissement.</li><li><code>int</code> <code>$key</code> : N° de l&#39;offset en cours.</li><li><code>LuFiipe\\InseeSierene\\Response\\Pagination</code> <code>$pagination</code> : Instance de la pagination en cours.</li><li><code>LuFiipe\\InseeSierene\\Response\\Header</code> <code>$header</code> : Instance de l&#39;header en cours.</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Pagination</span> <span class="token variable">$pagination</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Header</span> <span class="token variable">$header</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vous pouvez arrêter l&#39;itération des éléments à tout moment en retournant <code>false</code> depuis votre closure :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* condition */</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manuellement" tabindex="-1"><a class="header-anchor" href="#manuellement"><span>Manuellement</span></a></h3><p>Le parcours des résultats en manuel se fait avec le jeu de méthodes suivantes:</p><ul><li><code>firstPage()</code> : Renvoie la première page. <em>Remarque</em> : si un offset est spécifié dans la requête, la première page commencera à partir de cet offset.</li><li><code>nextPage()</code> : Renvoie la page suivante.</li><li><code>previousPage()</code> : Renvoie la page précédente.</li><li><code>lastPage()</code> : Renvoie la page dernière page.</li><li><code>count()</code> : Renvoie le nombre total d&#39;éléments dans la collection.</li></ul><p>Les méthodes <code>firstPage()</code>, <code>nextPage()</code>, <code>previousPage()</code> et <code>lastPage()</code> retournent une instance de <code>LuFiipe\\InseeSierene\\Response\\ResponsePaginated</code>.</p><p><code>ResponsePaginated</code> partage le même principe d&#39;utilisation que <code>Response</code>, sauf pour les points suivants :</p><ul><li>Elle inclut des informations de pagination accessibles via la méthode <code>getPagination()</code>,</li><li>Et la méthode <code>getBody()</code> retourne l&#39;ensemble des éléments contenus dans une page.</li></ul><p>Exemple 1 : Pagination manuelle :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Parameters<span class="token punctuation">\\</span>SearchParameters</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token package">LuFiipe<span class="token punctuation">\\</span>InseeSierene<span class="token punctuation">\\</span>Sirene</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$sirene</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sirene</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;YOUR-API-KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Recherche les établissements INSEE créés le 01/09/2016</span></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siren:120027016 AND dateCreationEtablissement:2016-09-01&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;siret&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siret&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setPerPage</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 30 éléments</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Débute à la page N° 1</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">firstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Continue sur la page N° 2</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">nextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Continue sur la page N° 3</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">nextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Reviens sur la page N° 2</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">previousPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Passe à la dernière page</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">lastPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Exemple 2 : Si un offset est défini dans la requête, la pagination commencera à partir de cet offset.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token comment">// Recherche les établissements INSEE créés le 01/09/2016</span></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siren:120027016 AND dateCreationEtablissement:2016-09-01&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;siret&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siret&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setPerPage</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setOffset</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Débute à la page N°1, mais en ignorant les 12 premiers éléments</span></span>
<span class="line"><span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">firstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Exemple 3 : Aperçu de l&#39;utilisation d&#39;une instance de <code>ResponsePaginated</code></p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code><span class="line"><span class="token comment">// Recherche les établissements INSEE</span></span>
<span class="line"><span class="token variable">$parameters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchParameters</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siren:120027016&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token operator">-&gt;</span><span class="token function">setPerPage</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token variable">$sirene</span><span class="token operator">-&gt;</span><span class="token function">searchEstablishments</span><span class="token punctuation">(</span><span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Débute à la page N°1</span></span>
<span class="line"><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">firstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Code de statut HTTP de la réponse</span></span>
<span class="line"><span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Informations de pagination pour la première page</span></span>
<span class="line"><span class="token variable">$pagination</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">getPagination</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Nombre total d&#39;établissements trouvés</span></span>
<span class="line"><span class="token variable">$pagination</span><span class="token operator">-&gt;</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Position actuelle dans les résultats (offset)</span></span>
<span class="line"><span class="token variable">$pagination</span><span class="token operator">-&gt;</span><span class="token function">getOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Liste des 5 premiers établissements trouvés</span></span>
<span class="line"><span class="token variable">$result</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31)]))}const c=s(t,[["render",l]]),r=JSON.parse('{"path":"/responses.html","title":"Les réponses","lang":"fr","frontmatter":{},"headers":[{"level":2,"title":"Réponse unitaire","slug":"reponse-unitaire","link":"#reponse-unitaire","children":[{"level":3,"title":"Header","slug":"header","link":"#header","children":[]}]},{"level":2,"title":"Collection","slug":"collection","link":"#collection","children":[{"level":3,"title":"Par itération","slug":"par-iteration","link":"#par-iteration","children":[]},{"level":3,"title":"Manuellement","slug":"manuellement","link":"#manuellement","children":[]}]}],"git":{"updatedTime":1750409905000,"contributors":[{"name":"Luis-Filipe ANTUNES","username":"","email":"lf.antunes.dasilva@gmail.com","commits":1}],"changelog":[{"hash":"34ae70bb58865cf686cb6461a22bc23d95033548","time":1750409905000,"email":"lf.antunes.dasilva@gmail.com","author":"Luis-Filipe ANTUNES","message":"Initial commit"}]},"filePathRelative":"responses.md"}');export{c as comp,r as data};
